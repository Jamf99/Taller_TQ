// <auto-generated />
using System;
using EvaluacionDesempeno.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvaluacionDesempeno.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModeloEvaluativoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreCargo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModeloEvaluativoId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.CicloEvaluativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anio")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CiclosEvaluativos");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cuestionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Cuestionarios");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvaluadorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("GrupoEvaluativoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("GrupoEvaluativoId");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.GrupoEvaluativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CicloEvaluativoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CicloEvaluativoId");

                    b.ToTable("GruposEvaluativos");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.ModeloEvaluativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreModelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModelosEvaluativos");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Calificacion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CuestionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CuestionarioId");

                    b.HasIndex("EvaluacionId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cargo", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.ModeloEvaluativo", "ModeloEvaluativo")
                        .WithMany("Cargos")
                        .HasForeignKey("ModeloEvaluativoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModeloEvaluativo");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Colaborador", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Colaboradores")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cuestionario", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.Cargo", "Cargo")
                        .WithMany("Cuestionarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Evaluacion", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.Colaborador", "Colaborador")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EvaluacionDesempeno.Domain.Entities.GrupoEvaluativo", "GrupoEvaluativo")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("GrupoEvaluativoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("GrupoEvaluativo");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.GrupoEvaluativo", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.CicloEvaluativo", "CicloEvaluativo")
                        .WithMany("GruposEvaluativos")
                        .HasForeignKey("CicloEvaluativoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CicloEvaluativo");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Respuesta", b =>
                {
                    b.HasOne("EvaluacionDesempeno.Domain.Entities.Cuestionario", "Cuestionario")
                        .WithMany("Respuestas")
                        .HasForeignKey("CuestionarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EvaluacionDesempeno.Domain.Entities.Evaluacion", "Evaluacion")
                        .WithMany("Respuestas")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuestionario");

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Cuestionarios");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.CicloEvaluativo", b =>
                {
                    b.Navigation("GruposEvaluativos");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Colaborador", b =>
                {
                    b.Navigation("Evaluaciones");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Cuestionario", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.Evaluacion", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.GrupoEvaluativo", b =>
                {
                    b.Navigation("Evaluaciones");
                });

            modelBuilder.Entity("EvaluacionDesempeno.Domain.Entities.ModeloEvaluativo", b =>
                {
                    b.Navigation("Cargos");
                });
#pragma warning restore 612, 618
        }
    }
}
